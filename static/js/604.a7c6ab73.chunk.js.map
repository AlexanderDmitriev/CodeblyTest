{"version":3,"file":"static/js/604.a7c6ab73.chunk.js","mappings":"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","sources":["components/FilterField.tsx","components/DataTable.tsx","components/Container.tsx","components/Modal.tsx","pages/MainPage.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const FilterField =({changeFilter}:any) => {\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n      <TextField id=\"filter\" label=\"Search field\" type=\"search\" onChange={changeFilter}/>\n      </div>\n    </Box>\n  );\n}\n\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { IData } from \"types/IData\";\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number,\n  ) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nexport  const  DataTable: React.FC<IData> =({data:rows}:IData) =>{\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (\n    _event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number,\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      {rows&&(<Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n        <TableBody>\n            {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.id} sx={{ bgcolor: `${row.color}` }}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"right\">\n                {row.name}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"right\">\n                {row.year}\n              </TableCell>\n            </TableRow>\n          ))}\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>)}\n      \n    </TableContainer>\n  );\n}","import Container from '@mui/material/Container';\n\nexport const DataContainer = ({children }:any) => {\n  return <Container maxWidth=\"sm\">{children}</Container>;\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function BasicModal() {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen}>Open modal</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Text in a modal\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}","import { FilterField } from 'components/FilterField';\nimport { DataTable } from 'components/DataTable';\nimport { DataContainer } from 'components/Container';\nimport BasicModal from 'components/Modal';\nimport { dataBookApi } from 'redux/dataBookApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterInfo } from '../redux/filter';\n\nexport default function MainPage () {\n  const { data: info, isSuccess } = dataBookApi.useGetAllDataQuery();\n\n  const dispatch = useDispatch();\n  const filterData = useSelector(state => state.filter.value);\n  const changeFilter = event => {\n    dispatch(filterInfo(event.currentTarget.value));\n    \n  };\n  let visibleData = [];\n  const normalizedFilter = Number(filterData);\n  if (info) {\n    visibleData = info.data.filter(data =>\n      data.id === normalizedFilter\n    );\n  }\n  console.log(visibleData);\n\n  return (\n    <DataContainer>\n      <FilterField changeFilter={changeFilter}/>\n      {isSuccess && <DataTable data={info.data} />}\n      <BasicModal />\n    </DataContainer>\n  );\n};\n"],"names":["FilterField","changeFilter","Box","component","sx","m","width","noValidate","autoComplete","TextField","id","label","type","onChange","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","onClick","event","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","DataTable","rows","data","React","setPage","setRowsPerPage","emptyRows","length","TableContainer","Paper","Table","minWidth","TableBody","slice","map","row","TableRow","bgcolor","color","TableCell","scope","style","align","name","year","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","value","SelectProps","inputProps","native","_event","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","DataContainer","children","Container","maxWidth","position","top","left","transform","border","boxShadow","p","BasicModal","open","setOpen","Button","Modal","onClose","Typography","variant","mt","MainPage","dataBookApi","info","isSuccess","dispatch","useDispatch","filterData","useSelector","state","filter","visibleData","normalizedFilter","Number","console","log","filterInfo","currentTarget"],"sourceRoot":""}