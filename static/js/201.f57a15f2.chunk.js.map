{"version":3,"file":"static/js/201.f57a15f2.chunk.js","mappings":"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","sources":["components/FilterField.tsx","components/TablePaginationActions.tsx","components/Modal.tsx","components/DataTable.tsx","components/Container.tsx","components/ErrorFallback.jsx","pages/MainPage.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const FilterField =({changeFilter}:any) => {\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n      <TextField id=\"filter\" label=\"Search field\" type=\"search\" onChange={changeFilter}/>\n      </div>\n    </Box>\n  );\n}\n\n","import { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\ninterface TablePaginationActionsProps {\n    count: number;\n    page: number;\n    rowsPerPage: number;\n    onPageChange: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      newPage: number,\n    ) => void;\n  }\n\nexport function TablePaginationActions(props: TablePaginationActionsProps) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onPageChange } = props;\n  \n    const handleFirstPageButtonClick = (\n      event: React.MouseEvent<HTMLButtonElement>,\n    ) => {\n      onPageChange(event, 0);\n    };\n  \n    const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      onPageChange(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      onPageChange(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n  \n    return (\n      <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"previous page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </Box>\n    );\n  }","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { nanoid } from 'nanoid';\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function BasicModal({ data,open, setOpen }: any) {\n  const handleClose = () => setOpen(false);\n  const itemInfo: string[] = [];\n  if (data) {\n    const keys = Object.keys(data);\n    const values = Object.values(data);\n    for (let i = 0; i <= keys.length - 1; i += 1) {\n      itemInfo.push(`${keys[i]} - ${values[i]}`);\n    }\n  }\n\n  return (\n    <div>\n      {data&&(<Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            {data.name}\n          </Typography>\n          {itemInfo.map(param => (\n            <Typography\n              id=\"modal-modal-description\"\n              key={nanoid()}\n              sx={{ mt: 2 }}\n            >\n              {param}\n            </Typography>\n          ))}\n        </Box>\n      </Modal>)}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { IData, DataAPI } from 'types/IData';\nimport { TablePaginationActions } from './TablePaginationActions';\nimport BasicModal from 'components/Modal';\n\nexport const DataTable = (props:any) => {\n  const {data:rows}:IData = props\n  const {open, setOpen,handlerModal}:any = props;\n  let currentItem:DataAPI=props.currentItem;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  \n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (\n    _event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n/*   const handlerModal = (event: React.SyntheticEvent): void => {\n    const currentId = event.currentTarget.firstChild?.textContent;\n    if (rows) {\n      currentItem = rows[Number(currentId)];\n      console.log(currentItem);\n    }\n    setOpen(!open);\n  }; */\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        {rows && (\n          <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n            <TableBody>\n              {(rowsPerPage > 0\n                ? rows.slice(\n                    page * rowsPerPage,\n                    page * rowsPerPage + rowsPerPage\n                  )\n                : rows\n              ).map(row => (\n                <TableRow\n                  key={row.id}\n                  sx={{ bgcolor: `${row.color}` }}\n                  onClick={handlerModal}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell style={{ width: 160 }} align=\"right\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell style={{ width: 160 }} align=\"right\">\n                    {row.year}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: {\n                      'aria-label': 'rows per page',\n                    },\n                    native: true,\n                  }}\n                  onPageChange={handleChangePage}\n                  onRowsPerPageChange={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </TableContainer>\n      <BasicModal data={currentItem} open={open} setOpen={setOpen} />\n    </>\n  );\n};\n","import Container from '@mui/material/Container';\n\nexport const DataContainer = ({children }:any) => {\n  return <Container maxWidth=\"sm\">{children}</Container>;\n};\n","export function ErrorFallback({error, resetErrorBoundary}) {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n}","import { FilterField } from 'components/FilterField';\nimport { DataTable } from 'components/DataTable';\nimport { DataContainer } from 'components/Container';\nimport { dataBookApi } from 'redux/dataBookApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterInfo } from '../redux/filter';\nimport { useState, useEffect } from 'react';\nimport { ErrorFallback } from 'components/ErrorFallback';\nimport { ErrorBoundary } from 'react-error-boundary';\n\nexport default function MainPage() {\n  const { data: info, isSuccess } = dataBookApi.useGetAllDataQuery();\n  const [visibleData, setVisibleData] = useState([]);\n  const [open, setOpen] = useState(false);\n  let [currentItem, setCurrentItem] = useState(null);\n\n  const dispatch = useDispatch();\n  const filterData = useSelector(state => state.filter.value);\n  const changeFilter = event => {\n    dispatch(filterInfo(event.currentTarget.value));\n  };\n\n  const normalizedFilter = Number(filterData);\n  const handlerModal = event => {\n    const currentId = event.currentTarget.firstChild?.textContent;\n    if (visibleData) {\n      setCurrentItem(visibleData.find(item => item.id === Number(currentId)));\n    }\n    setOpen(!open);\n  };\n\n  useEffect(() => {\n    if (info) {\n      if (filterData === '') {\n        setVisibleData(info.data);\n      } else {\n        setVisibleData(info.data.filter(data => data.id === normalizedFilter));\n      }\n    }\n  }, [filterData, info, normalizedFilter]);\n\n  return (\n    <DataContainer>\n      <FilterField changeFilter={changeFilter} />\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        {isSuccess && (\n          <DataTable\n            data={visibleData}\n            currentItem={currentItem}\n            open={open}\n            setOpen={setOpen}\n            handlerModal={handlerModal}\n          />\n        )}\n      </ErrorBoundary>\n    </DataContainer>\n  );\n}\n"],"names":["FilterField","changeFilter","Box","component","sx","m","width","noValidate","autoComplete","TextField","id","label","type","onChange","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","onClick","event","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","style","position","top","left","transform","bgcolor","border","boxShadow","p","BasicModal","data","open","setOpen","itemInfo","keys","Object","values","i","length","push","Modal","onClose","Typography","variant","name","map","param","mt","nanoid","DataTable","rows","handlerModal","currentItem","React","setPage","setRowsPerPage","emptyRows","TableContainer","Paper","Table","minWidth","TableBody","slice","row","TableRow","color","TableCell","scope","align","year","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","value","SelectProps","inputProps","native","_event","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","DataContainer","children","Container","maxWidth","ErrorFallback","error","resetErrorBoundary","role","message","MainPage","dataBookApi","info","isSuccess","useState","visibleData","setVisibleData","setCurrentItem","dispatch","useDispatch","filterData","useSelector","state","filter","normalizedFilter","Number","useEffect","filterInfo","currentTarget","ErrorBoundary","FallbackComponent","currentId","firstChild","textContent","find","item"],"sourceRoot":""}